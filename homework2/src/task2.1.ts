type FirstSeasonMonth = 3 | 6 | 9 | 12;

function validateMonth(month: number): asserts month is FirstSeasonMonth {
    if (month < 1 || month > 12 || !Number.isInteger(month)) {
        throw new Error("‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä –º—ñ—Å—è—Ü—è! –ú—ñ—Å—è—Ü—å –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º –≤—ñ–¥ 1 –¥–æ 12.");
    }

    if (month !== 3 && month !== 6 && month !== 9 && month !== 12) {
        throw new Error(`‚ùå –ú—ñ—Å—è—Ü—å ${month} –Ω–µ —î –ø–µ—Ä—à–∏–º –º—ñ—Å—è—Ü–µ–º –ø–æ—Ä–∏ —Ä–æ–∫—É! –ü–µ—Ä—à—ñ –º—ñ—Å—è—Ü—ñ: 3 (–±–µ—Ä–µ–∑–µ–Ω—å), 6 (—á–µ—Ä–≤–µ–Ω—å), 9 (–≤–µ—Ä–µ—Å–µ–Ω—å), 12 (–≥—Ä—É–¥–µ–Ω—å).`);
    }
}

function getSeason(month: FirstSeasonMonth): string {
    let res: string

    switch (month) {
        case 3:
            res = "–í–µ—Å–Ω–∞";
            break
        case 6:
            res = "–õ—ñ—Ç–æ";
            break
        case 9:
            res = "–û—Å—ñ–Ω—å";
            break
        case 12:
            res = "–ó–∏–º–∞";
            break
        default:
            const _exCheck: never = month
            throw new Error(`–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏–π –≤–∏–ø–∞–¥–æ–∫`);
    }

    return res
}

function determineSeason(month: number): string {
    validateMonth(month);
    const season: string = getSeason(month);

    const seasonEmojis: Record<string, string> = {
        "–í–µ—Å–Ω–∞": "üå∏",
        "–õ—ñ—Ç–æ": "‚òÄÔ∏è",
        "–û—Å—ñ–Ω—å": "üçÇ",
        "–ó–∏–º–∞": "‚ùÑÔ∏è"
    };

    const monthNames: Record<FirstSeasonMonth, string> = {
        3: "–±–µ—Ä–µ–∑–µ–Ω—å",
        6: "—á–µ—Ä–≤–µ–Ω—å",
        9: "–≤–µ—Ä–µ—Å–µ–Ω—å",
        12: "–≥—Ä—É–¥–µ–Ω—å"
    };

    return `${seasonEmojis[season]} –ú—ñ—Å—è—Ü—å ${month} (${monthNames[month]}) - —Ü–µ ${season}!`;
}

const checkButton21 = document.getElementById('checkSeason') as HTMLButtonElement;
const resultBlock21 = document.getElementById('resultBlock') as HTMLDivElement;
const errorBlock21 = document.getElementById('errorBlock') as HTMLDivElement;
const resultContent21 = document.getElementById('result-content') as HTMLElement;
const errorContent21 = document.getElementById('error-content') as HTMLElement;

checkButton21?.addEventListener('click', (): void => {
    const monthInput = document.getElementById('monthInput') as HTMLInputElement;
    const monthValue: number = parseInt(monthInput.value);

    resultBlock21.style.display = 'none';
    errorBlock21.style.display = 'none';

    if (!monthInput.value || isNaN(monthValue)) {
        errorContent21.textContent = '‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –º—ñ—Å—è—Ü—è!';
        errorBlock21.style.display = 'block';
        return;
    }

    try {
        resultContent21.textContent = determineSeason(monthValue);
        resultBlock21.style.display = 'block';
    } catch (error) {
        errorContent21.textContent = '‚ùå –ü–æ–º–∏–ª–∫–∞: ' + error;
        errorBlock21.style.display = 'block';
    }
});