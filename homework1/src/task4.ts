type DayInput = number | string
type Result = {
    isValid: boolean;
    isWorking: boolean;
    message: string
}

function isWorkingDay(day: DayInput): Result {
    let dayNumber: number;

    if (typeof day === 'number') {
        dayNumber = day;
    } else {
        const dayNames: { [key: string]: number } = {
            '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫': 1,
            '–≤—ñ–≤—Ç–æ—Ä–æ–∫': 2,
            '—Å–µ—Ä–µ–¥–∞': 3,
            '—á–µ—Ç–≤–µ—Ä': 4,
            '–ø\'—è—Ç–Ω–∏—Ü—è': 5,
            '–ø—è—Ç–Ω–∏—Ü—è': 5,
            '—Å—É–±–æ—Ç–∞': 6,
            '–Ω–µ–¥—ñ–ª—è': 7
        };

        const normalizedDay: string = day.toLowerCase().trim();
        dayNumber = dayNames[normalizedDay] || parseInt(day);
    }

    if (isNaN(dayNumber) || dayNumber < 1 || dayNumber > 7) {
        return {
            isValid: false,
            isWorking: false,
            message: '‚ùå –ü–æ–º–∏–ª–∫–∞! –î–µ–Ω—å –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º –≤—ñ–¥ 1 –¥–æ 7 –∞–±–æ –Ω–∞–∑–≤–æ—é –¥–Ω—è —Ç–∏–∂–Ω—è'
        };
    }

    const isWorking: boolean = dayNumber >= 1 && dayNumber <= 5;

    return {
        isValid: true,
        isWorking: isWorking,
        message: isWorking
            ? `‚úÖ ${day} - —Ü–µ –†–û–ë–û–ß–ò–ô –î–ï–ù–¨`
            : `üèñÔ∏è ${day} - —Ü–µ –í–ò–•–Ü–î–ù–ò–ô –î–ï–ù–¨`
    };
}

const checkButton = document.getElementById('checkDay') as HTMLButtonElement;
const resultBlock4 = document.getElementById('resultBlock') as HTMLDivElement;
const resultContent = document.getElementById('result-content') as HTMLElement;

checkButton?.addEventListener('click', (): void => {
    const dayInput: string = (document.getElementById('dayInput') as HTMLInputElement).value;

    if (!dayInput) {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –¥–µ–Ω—å!');
        return;
    }

    const dayValue: DayInput = isNaN(parseInt(dayInput)) ? dayInput : parseInt(dayInput);

    const result: Result = isWorkingDay(dayValue);

    resultContent.textContent = result.message;
    resultBlock4.style.display = 'block';
});